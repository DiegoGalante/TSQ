name: CI TSQ - Build, Teste & SonnarCloud
on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Inicializando java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Inicializando o dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '5.x'
  
      - name: Instalando Dependência Global da Cobertura de Código
        run: dotnet tool install --global coverlet.console
        
      - name: Instalando Dependência coverlet.collector
        run: dotnet add package coverlet.collector

      - name: Instalando Dependência Microsoft.NET.Test.Sdk
        run: dotnet add package Microsoft.NET.Test.Sdk

      - name: Instalando Dependência coverlet.msbuild
        run: dotnet add package coverlet.msbuild
        

      - name: Restaurando o(s) projeto(s)
        run: dotnet restore
        
      - name: Realizando o Build
        run: dotnet build
        
      - name: Realizando os testes com o dotnet CLI
        run: dotnet test

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Instalando o SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Realizando o build e a análise do sonarscanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" /o:"diegogalante" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=coverage.xml
          dotnet build --no-incremental
          #coverlet .\tests\bin\Debug\net5.0\*.Tests.dll --target "dotnet" --targetargs "test --no-build" -f=opencover -o="coverage.xml"
          dotnet test /p:CollectCoverage=true
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"